Explanation:
    1.Queue Initialization: Start by initializing a queue to hold nodes for BFS traversal.
    2.Level Sum Calculation:
        .For each level, calculate the sum of all node values and count the number of nodes.
        .Divide the sum by the number of nodes at the level to compute the average.
    3.Store Average in Array: Append the average of each level to the averages array.
    4.Return: After traversing all levels, return the averages array and set returnSize to the number of levels.


class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> result;
        if (!root) return result;

        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            int levelSize = q.size();
            double sum = 0.0;

            for (int i = 0; i < levelSize; i++) {
                TreeNode* node = q.front();
                q.pop();
                sum += node->val;

                if (node->left) q.push(node->left);
                if (node->right) q.push(node->right);
            }
            
            result.push_back(sum / levelSize);
        }

        return result;
    }
};
